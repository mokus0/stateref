name:                   stateref
version:                0.2.1.1
stability:              provisional

cabal-version:          >= 1.2
build-type:             Simple

author:                 James Cook <mokus@deepbondi.net>
maintainer:             James Cook <mokus@deepbondi.net>

description:            Type-classes generalizing the read\/write\/modify
                        operations for stateful variables

Flag useSTM
  Description:          Include instances for STM types
  Default:              True

Flag useTMVar
  Description:          Include instances for TMVar (TMVar not available
                        in hugs' stm implementation).  I have been unable to
                        make this flag's value depend on whether or not
                        you're running hugs, so if you are, you'll just have
                        to change it manually.  It'd sure be nice if there
                        were either an explicit backtrack command in cabal
                        or if 'buildable:false' would trigger a backtrack.
  Default:              True

Library
  hs-source-dirs:       src
  extensions:           CPP
  
  -- I don't much like this flag, but it's the only way I've found so far
  -- (after literally _minutes_ of exhaustive search!) of making haddock
  -- work.  It causes haddock not to see a couple class instances upon
  -- which it otherwise would choke (at version 0.9 anyway).  
  -- 
  -- Slightly preferable would be -DHADDOCK when running haddock.  I've found
  -- reference to a '--optghc' flag in haddock, but it doesn't work in
  -- the version I've got here, and there is also no convenient way to
  -- set in from the .cabal file (there's no 'haddock-options' directive, as
  -- far as I can tell).
  ghc-options:          -DNotHADDOCK
  
  exposed-modules:      Data.Accessor
                        Data.StateRef
                        Data.StateRef.Classes
                        Data.StateRef.Instances
                        Data.MRef
                        Data.MRef.Classes
                        Data.MRef.Instances
  other-modules:        Data.StateRef.Instances.Undecidable
  if flag(useSTM)
    other-modules:      Data.StateRef.Instances.STM
                        Data.MRef.Instances.STM
    cpp-options:        -DuseSTM
    
    if flag(useTMVar)
      cpp-options:      -DuseTMVar
      
      if impl(hugs)
        buildable:      False
    
  build-depends:        base >= 3, mtl
  if flag(useSTM)
    build-depends:      stm
